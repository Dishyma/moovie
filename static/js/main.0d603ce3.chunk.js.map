{"version":3,"sources":["components/Movie.js","App.js","index.js"],"names":["Movie","movie","selectMovie","onClick","className","poster_path","src","alt","title","vote_average","App","MOVIE_API","API_KEY","useState","playing","setPlaying","trailer","setTrailer","movies","setMovies","searchKey","setSearchKey","setMovie","useEffect","fetchMovies","event","a","preventDefault","axios","get","params","api_key","query","data","console","log","results","length","fetchMovie","id","append_to_response","videos","find","vid","name","window","scrollTo","onSubmit","type","onInput","target","value","style","backgroundImage","backdrop_path","videoId","key","containerClassName","opts","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","overview","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAqBeA,EAnBD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAGnB,OACI,qBAAKC,QAAS,kBAAMD,EAAYD,IAAQG,UAAW,QAAnD,SACI,sBAAKA,UAAU,cAAf,UACKH,EAAMI,aACP,qBAAKC,IANE,kCAMgBL,EAAMI,YAAaE,IAAKN,EAAMO,QAErD,sBAAKJ,UAAW,2BAAhB,UACI,oBAAIA,UAAW,cAAf,SAA+BH,EAAMO,QACpCP,EAAMQ,aAAe,sBAAML,UAAW,eAAjB,SAAkCH,EAAMQ,eAAuB,c,QCkI1FC,MAzIf,WACI,IAAMC,EAAY,gCAGZC,EAAU,mCAJL,EAOmBC,oBAAS,GAP5B,mBAOJC,EAPI,KAOKC,EAPL,OAQmBF,mBAAS,MAR5B,mBAQJG,EARI,KAQKC,EARL,OASiBJ,mBAAS,IAT1B,mBASJK,EATI,KASIC,EATJ,OAUuBN,mBAAS,IAVhC,mBAUJO,EAVI,KAUOC,EAVP,OAWeR,mBAAS,CAACL,MAAO,mBAXhC,mBAWJP,EAXI,KAWGqB,EAXH,KAaXC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACZD,GACAA,EAAME,iBAFM,SAKKC,IAAMC,IAAN,UAAaT,EApBnBT,4CACEA,+CAmB0D,CACvEmB,OAAQ,CACJC,QAASnB,EACToB,MAAOZ,KARC,mBAKTa,EALS,EAKTA,KAOPC,QAAQC,IAAIF,EAAKG,QAAQ,IACzBjB,EAAUc,EAAKG,SACfd,EAASW,EAAKG,QAAQ,KAElBH,EAAKG,QAAQC,OAhBD,kCAiBNC,EAAWL,EAAKG,QAAQ,GAAGG,IAjBrB,4CAAH,sDAqBXD,EAAU,uCAAG,WAAOC,GAAP,mBAAAb,EAAA,sEACME,IAAMC,IAAN,UAAalB,EAAb,iBAA+B4B,GAAM,CACtDT,OAAQ,CACJC,QAASnB,EACT4B,mBAAoB,YAJb,iBACRP,EADQ,EACRA,MAOEQ,QAAUR,EAAKQ,OAAOL,UACrBpB,EAAUiB,EAAKQ,OAAOL,QAAQM,MAAK,SAAAC,GAAG,MAAiB,qBAAbA,EAAIC,QACpD3B,EAAWD,GAAoBiB,EAAKQ,OAAOL,QAAQ,KAGvDd,EAASW,GAbM,2CAAH,sDAiBV/B,EAAc,SAACD,GACjBqC,EAAWrC,EAAMsC,IACjBxB,GAAW,GACXO,EAASrB,GACT4C,OAAOC,SAAS,EAAG,IAavB,OACI,sBAAK1C,UAAU,MAAf,UACI,yBAAQA,UAAU,yBAAlB,UACI,sBAAMA,UAAW,QAAjB,oBACA,uBAAMA,UAAU,OAAO2C,SAAUvB,EAAjC,UACI,uBAAOpB,UAAU,SAAS4C,KAAK,OAAOT,GAAG,SAClCU,QAAS,SAACxB,GAAD,OAAWJ,EAAaI,EAAMyB,OAAOC,UACrD,wBAAQ/C,UAAU,gBAAgB4C,KAAK,SAAvC,SAAgD,mBAAG5C,UAAU,yBAGpEc,EAAOmB,OACJ,iCACKpC,EACG,qBAAKG,UAAU,SACVgD,MAAO,CAACC,gBAAgB,uEAAD,OAjF1B,oCAiF0B,OAAyFpD,EAAMqD,cAA/F,MAD5B,SAEKxC,EACG,qCACI,cAAC,IAAD,CACIyC,QAASvC,EAAQwC,IACjBpD,UAAW,eACXqD,mBAAoB,yBACpBC,KACI,CACIC,MAAO,OACPC,OAAQ,OACRC,WAAY,CACRC,SAAU,EACVC,SAAU,EACVC,eAAgB,EAChBC,GAAI,EACJC,eAAgB,EAChBC,eAAgB,EAChBC,IAAK,EACLC,SAAU,MAK1B,wBAAQlE,QAAS,kBAAMY,GAAW,IAAQX,UAAW,qBAArD,sBAGJ,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,iBAAf,UACKY,EACG,wBAAQZ,UAAW,oBAAqBD,QAAS,kBAAMY,GAAW,IAC1DiC,KAAK,SADb,0BAGE,8BACN,6BAAK/C,EAAMO,QACX,4BAAIP,EAAMqE,kBAKxB,KAEN,qBAAKlE,UAAW,4BAAhB,SAjEZc,EAAOqD,KAAI,SAAAtE,GAAK,OACZ,cAAC,EAAD,CACIC,YAAaA,EAEbD,MAAOA,GADFA,EAAMsC,YAkET,6BCrIlBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d603ce3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Movie = ({movie, selectMovie}) => {\r\n    const IMAGE_PATH = \"https://image.tmdb.org/t/p/w342\"\r\n\r\n    return (\r\n        <div onClick={() => selectMovie(movie)} className={\"movie\"}>\r\n            <div className=\"movie-title\">\r\n                {movie.poster_path &&\r\n                <img src={IMAGE_PATH + movie.poster_path} alt={movie.title}/>\r\n                }\r\n                <div className={\"flex between movie-infos\"}>\r\n                    <h5 className={\"movie-title\"}>{movie.title}</h5>\r\n                    {movie.vote_average ? <span className={\"movie-voting\"}>{movie.vote_average}</span> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Movie;","import {useEffect, useState} from \"react\"\r\nimport './App.css'\r\nimport axios from 'axios'\r\nimport Movie from \"./components/Movie\"\r\nimport Youtube from 'react-youtube'\r\n\r\nfunction App() {\r\n    const MOVIE_API = \"https://api.themoviedb.org/3/\"\r\n    const SEARCH_API = MOVIE_API + \"search/movie\"\r\n    const DISCOVER_API = MOVIE_API + \"discover/movie\"\r\n    const API_KEY = \"bfc4989cd0e09cbd9fb6f3dacba422c8\"\r\n    const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\"\r\n\r\n    const [playing, setPlaying] = useState(false)\r\n    const [trailer, setTrailer] = useState(null)\r\n    const [movies, setMovies] = useState([])\r\n    const [searchKey, setSearchKey] = useState(\"\")\r\n    const [movie, setMovie] = useState({title: \"Loading Movies\"})\r\n\r\n    useEffect(() => {\r\n        fetchMovies()\r\n    }, [])\r\n\r\n    const fetchMovies = async (event) => {\r\n        if (event) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        const {data} = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query: searchKey\r\n            }\r\n        })\r\n\r\n        console.log(data.results[0])\r\n        setMovies(data.results)\r\n        setMovie(data.results[0])\r\n\r\n        if (data.results.length) {\r\n            await fetchMovie(data.results[0].id)\r\n        }\r\n    }\r\n\r\n    const fetchMovie = async (id) => {\r\n        const {data} = await axios.get(`${MOVIE_API}movie/${id}`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                append_to_response: \"videos\"\r\n            }\r\n        })\r\n\r\n        if (data.videos && data.videos.results) {\r\n            const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\")\r\n            setTrailer(trailer ? trailer : data.videos.results[0])\r\n        }\r\n\r\n        setMovie(data)\r\n    }\r\n\r\n\r\n    const selectMovie = (movie) => {\r\n        fetchMovie(movie.id)\r\n        setPlaying(false)\r\n        setMovie(movie)\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const renderMovies = () => (\r\n        movies.map(movie => (\r\n            <Movie\r\n                selectMovie={selectMovie}\r\n                key={movie.id}\r\n                movie={movie}\r\n            />\r\n        ))\r\n    )\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"center-max-size header\">\r\n                <span className={\"brand\"}>MOOVIE</span>\r\n                <form className=\"form\" onSubmit={fetchMovies}>\r\n                    <input className=\"search\" type=\"text\" id=\"search\"\r\n                           onInput={(event) => setSearchKey(event.target.value)}/>\r\n                    <button className=\"submit-search\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                </form>\r\n            </header>\r\n            {movies.length ?\r\n                <main>\r\n                    {movie ?\r\n                        <div className=\"poster\"\r\n                             style={{backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})`}}>\r\n                            {playing ?\r\n                                <>\r\n                                    <Youtube\r\n                                        videoId={trailer.key}\r\n                                        className={\"youtube amru\"}\r\n                                        containerClassName={\"youtube-container amru\"}\r\n                                        opts={\r\n                                            {\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                playerVars: {\r\n                                                    autoplay: 1,\r\n                                                    controls: 0,\r\n                                                    cc_load_policy: 0,\r\n                                                    fs: 0,\r\n                                                    iv_load_policy: 0,\r\n                                                    modestbranding: 0,\r\n                                                    rel: 0,\r\n                                                    showinfo: 0,\r\n                                                },\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                    <button onClick={() => setPlaying(false)} className={\"button close-video\"}>Close\r\n                                    </button>\r\n                                </> :\r\n                                <div className=\"center-max-size\">\r\n                                    <div className=\"poster-content\">\r\n                                        {trailer ?\r\n                                            <button className={\"button play-video\"} onClick={() => setPlaying(true)}\r\n                                                    type=\"button\">Play\r\n                                                Trailer</button>\r\n                                            : 'Sorry, no trailer available'}\r\n                                        <h1>{movie.title}</h1>\r\n                                        <p>{movie.overview}</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        : null}\r\n\r\n                    <div className={\"center-max-size container\"}>\r\n                        {renderMovies()}\r\n                    </div>\r\n                </main>\r\n                : 'Sorry, no movies found'}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}